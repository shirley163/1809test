<?php

$a = 10;
$b = 10;

if ($a = 20 && $b = 30) {
    $a++;
    $b++;
}

// 1, $a = 20 && $b = 30
// 此处 $a 之后 为 = 是赋值运算符
//
// 20 && $b = 30 执行结果赋值给$a
//
// && || ! xor 逻辑运算符,执行结果一定是布尔类型
//
// 逻辑运算符,需要将两侧表达式的结果转化为布尔类型
//
// 第一个表达式 20 整数类型 转化为布尔类型为  true
//
// 第一个表达式结果为 true 不能决定整个逻辑表达式的结果
//
// 第二个表达式执行 $b = 30 将30赋值给$b 再将 $b中存储的30,转化为布尔类型 也是 true
//
// 20 && $b = 30 最终结果为 true && true 结果为 true
//
// $a = true   $a  被赋值为true
//
// 2,if($a)  $a 现在存储的数值为 true
//
// 可以执行执行体 $a++ $b++ 都被执行
//
// $a 为 true true++  布尔类型数值不支持 ++ -- 操作
//
// $a++  结果仍然是 true
//
// $b 为 30 $b++ 为 31
//
// 3,echo 输出
//
// echo $a    echo true   echo输出只能输出标量类型,并且会将标量类型自动转化为字符串输出  true 转化为字符串 '1'
//
// echo $b  echo 31
//
// 关键点:
//
// 1, = 为赋值 == 为比较
//
// 2, 只要是逻辑运算符 && || 就要考虑是否有短路求值的情况发生
//
// &&  第一个表达式结果为false
// ||  第一个表达式结果为true
//
// 3,echo 输出的内容只能是字符串类型,会自动转化

echo $a, ' ', $b;
